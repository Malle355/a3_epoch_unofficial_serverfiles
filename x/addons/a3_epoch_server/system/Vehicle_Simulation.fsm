/*%FSM<COMPILE "F:\Program Files (x86)\Bohemia Interactive\Tools\FSM Editor Personal Edition\scriptedFSM.cfg, simulation">*/

/*%FSM<HEAD>*/

/*

item0[] = {"Init",0,4346,-300.000000,-225.000000,-200.000000,-175.000000,0.000000,"Init"};

item1[] = {"_",8,218,-300.000000,-150.000000,-200.000000,-100.000000,0.000000,""};

item2[] = {"Process",2,250,-300.000000,-75.000000,-200.000000,-25.000000,0.000000,"Process"};

item3[] = {"Cleanup_RTM_Anim",4,218,-500.000000,-100.000000,-400.000000,-50.000000,7.000000,"Cleanup" \n "RTM Anim Loot" \n "WH"};

item4[] = {"De_simulate_Vehicle",4,218,-350.000000,75.000000,-250.000000,125.000000,2.000000,"De-simulate" \n "Vehicle Check"};

item5[] = {"Simulate_Vehicle",4,218,-250.000000,75.000000,-150.000000,125.000000,1.000000,"Simulate" \n "Vehicle Check"};

item6[] = {"CMD_queue",4,218,-125.000000,-100.000000,-25.000000,-50.000000,4.000000,"CMD queue"};

item7[] = {"Save_Players",4,218,-125.000000,-50.000000,-25.000000,0.000000,3.000000,"Save" \n "Players"};

item8[] = {"Cleanup_ground_W",4,218,-500.000000,25.000000,-400.000000,75.000000,6.000000,"Cleanup" \n "ground" \n "WeaponHolders"};

item9[] = {"Cleanup__SimWH_and",4,218,-500.000000,-25.000000,-400.000000,25.000000,6.000000,"Cleanup " \n "SimWH and" \n " Krypto Devices"};

item10[] = {"Cleanup_Config_Anim",4,218,-500.000000,-150.000000,-400.000000,-100.000000,8.000000,"Cleanup" \n "Config Anim Loot" \n "WH"};

link0[] = {0,1};

link1[] = {1,2};

link2[] = {2,3};

link3[] = {2,4};

link4[] = {2,5};

link5[] = {2,6};

link6[] = {2,7};

link7[] = {2,8};

link8[] = {2,9};

link9[] = {2,10};

link10[] = {3,2};

link11[] = {4,2};

link12[] = {5,2};

link13[] = {6,2};

link14[] = {7,2};

link15[] = {8,2};

link16[] = {9,2};

link17[] = {10,2};

globals[] = {25.000000,1,0,0,16777215,640,480,1,121,6316128,1,-584.428345,234.464355,548.623474,-467.773682,863,880,1};

window[] = {2,-1,-1,-32000,-32000,575,790,1815,50,3,881};

*//*%FSM</HEAD>*/

class FSM

{

  fsmName = "simulation";

  class States

  {

    /*%FSM<STATE "Init">*/

    class Init

    {

      name = "Init";

      init = /*%FSM<STATEINIT""">*/"diag_log ""Loaded Server FSM"";" \n

       "" \n

       "_activeVehicles = [];" \n

       "_toBeDesimulated = [];" \n

       "_players = [];" \n

       "_prevPlayers = [];" \n

       "" \n

       "_delayTimeSim = diag_tickTime;" \n

       "_delayTimeCMD = diag_tickTime;" \n

       "_delayTimeDeSim = diag_tickTime;" \n

       "_lastObjectCleanup = diag_tickTime;" \n

       "_lastObjectCleanup1 = diag_tickTime;" \n

       "_lastObjectCleanup2 = diag_tickTime;" \n

       "_lastObjectCleanup3 = diag_tickTime;" \n

       "" \n

       "_cleanIt = {" \n

       "	_lastCheck = _this getVariable ""LAST_CHECK"";" \n

       "	if (isNil ""_lastCheck"") then{" \n

       "		_this setVariable[""LAST_CHECK"", diag_tickTime];" \n

       "		_lastCheck = diag_tickTime;" \n

       "	};" \n

       "	if (diag_tickTime - _lastCheck > 1200) then {" \n

       "		_list = _this nearEntities[[""CAManBase"", ""LandVehicle"", ""Ship"", ""Air""], 45];" \n

       "		if ({ isPlayer _x }count _list == 0) then{" \n

       "			_this setVariable [""LAST_CHECK"",nil];" \n

       "			deleteVehicle _this;" \n

       "		};" \n

       "	};" \n

       "};" \n

       "" \n

       "_cleanIt2 = {" \n

       "	_lastCheck = _this getVariable ""LAST_CHECK"";" \n

       "	if (isNil ""_lastCheck"") then{" \n

       "		_this setVariable[""LAST_CHECK"", diag_tickTime];" \n

       "		_lastCheck = diag_tickTime;" \n

       "	};" \n

       "	if (diag_tickTime - _lastCheck > 1200) then {" \n

       "		_list = _this nearEntities[[""CAManBase"", ""LandVehicle"", ""Ship"", ""Air""], 45];" \n

       "		if ({ isPlayer _x }count _list == 0) then{" \n

       "			{" \n

       "				deleteVehicle _x;" \n

       "			}forEach nearestObjects[_this, [""WeaponHolder""], 2];" \n

       "			_this setVariable [""LAST_CHECK"",nil];" \n

       "			deleteVehicle _this;" \n

       "		};" \n

       "	};" \n

       "};"/*%FSM</STATEINIT""">*/;

      precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;

      class Links

      {

        /*%FSM<LINK "_">*/

        class _

        {

          priority = 0.000000;

          to="Process";

          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;

          condition=/*%FSM<CONDITION""">*/"true"/*%FSM</CONDITION""">*/;

          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;

        };

        /*%FSM</LINK>*/

      };

    };

    /*%FSM</STATE>*/

    /*%FSM<STATE "Process">*/

    class Process

    {

      name = "Process";

      init = /*%FSM<STATEINIT""">*/""/*%FSM</STATEINIT""">*/;

      precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;

      class Links

      {

        /*%FSM<LINK "Cleanup_Config_Anim">*/

        class Cleanup_Config_Anim

        {

          priority = 8.000000;

          to="Process";

          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;

          condition=/*%FSM<CONDITION""">*/"((diag_tickTime - _lastObjectCleanup) > 300)"/*%FSM</CONDITION""">*/;

          action=/*%FSM<ACTION""">*/"_lastObjectCleanup = diag_tickTime;" \n

           "" \n

           "{" \n

           "	_x call _cleanIt;" \n

           "}forEach allMissionObjects ""WH_Loot"";"/*%FSM</ACTION""">*/;

        };

        /*%FSM</LINK>*/

        /*%FSM<LINK "Cleanup_RTM_Anim">*/

        class Cleanup_RTM_Anim

        {

          priority = 7.000000;

          to="Process";

          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;

          condition=/*%FSM<CONDITION""">*/"((diag_tickTime - _lastObjectCleanup1) > 360)"/*%FSM</CONDITION""">*/;

          action=/*%FSM<ACTION""">*/"_lastObjectCleanup1 = diag_tickTime;" \n

           "" \n

           "{" \n

           "	_x call _cleanIt2;" \n

           "}forEach allMissionObjects ""Animated_Loot"";"/*%FSM</ACTION""">*/;

        };

        /*%FSM</LINK>*/

        /*%FSM<LINK "Cleanup_ground_W">*/

        class Cleanup_ground_W

        {

          priority = 6.000000;

          to="Process";

          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;

          condition=/*%FSM<CONDITION""">*/"((diag_tickTime - _lastObjectCleanup3) > 480)"/*%FSM</CONDITION""">*/;

          action=/*%FSM<ACTION""">*/"_lastObjectCleanup3 = diag_tickTime;" \n

           "" \n

           "{" \n

           "	_x call _cleanIt;" \n

           "} forEach allMissionObjects ""groundWeaponHolder"";"/*%FSM</ACTION""">*/;

        };

        /*%FSM</LINK>*/

        /*%FSM<LINK "Cleanup__SimWH_and">*/

        class Cleanup__SimWH_and

        {

          priority = 6.000000;

          to="Process";

          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;

          condition=/*%FSM<CONDITION""">*/"((diag_tickTime - _lastObjectCleanup2) > 420)"/*%FSM</CONDITION""">*/;

          action=/*%FSM<ACTION""">*/"_lastObjectCleanup2 = diag_tickTime;" \n

           "" \n

           "{" \n

           "	if (_x isKindOf ""Land_MPS_EPOCH"" || _x isKindOf ""WeaponHolderSimulated"") then{" \n

           "		_x call _cleanIt;" \n

           "	};" \n

           "} forEach vehicles;"/*%FSM</ACTION""">*/;

        };

        /*%FSM</LINK>*/

        /*%FSM<LINK "CMD_queue">*/

        class CMD_queue

        {

          priority = 4.000000;

          to="Process";

          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;

          condition=/*%FSM<CONDITION""">*/"((diag_tickTime - _delayTimeCMD) > 2)"/*%FSM</CONDITION""">*/;

          action=/*%FSM<ACTION""">*/"_delayTimeCMD = diag_tickTime;" \n

           "" \n

           "// Execute next item from CMD queue" \n

           "_response = EPOCH_hive callExtension format[""LPOP|CMD%1|NA"", EPOCH_InstanceID];" \n

           "if (_response != """") then {" \n

           "	diag_log format[""CMD DEBUG: %1"", _response];" \n

           "	0 spawn compile _response;" \n

           "};"/*%FSM</ACTION""">*/;

        };

        /*%FSM</LINK>*/

        /*%FSM<LINK "Save_Players">*/

        class Save_Players

        {

          priority = 3.000000;

          to="Process";

          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;

          condition=/*%FSM<CONDITION""">*/"!(_players isEqualTo _prevPlayers)"/*%FSM</CONDITION""">*/;

          action=/*%FSM<ACTION""">*/"_prevPlayers = _players;" \n

           "[""PLAYERS"", EPOCH_InstanceID, _players, EPOCH_hive] call EPOCH_server_hiveSET;"/*%FSM</ACTION""">*/;

        };

        /*%FSM</LINK>*/

        /*%FSM<LINK "De_simulate_Vehicle">*/

        class De_simulate_Vehicle

        {

          priority = 2.000000;

          to="Process";

          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;

          condition=/*%FSM<CONDITION""">*/"((diag_tickTime - _delayTimeDeSim) > 12)"/*%FSM</CONDITION""">*/;

          action=/*%FSM<ACTION""">*/"_delayTimeDeSim = diag_tickTime;" \n

           "" \n

           "_toBeDesimulated = [];" \n

           "{" \n

           "	if (crew _x isEqualTo []) then {" \n

           "		" \n

           "		_list = _x nearEntities[[""CAManBase"", ""LandVehicle"", ""Ship"", ""Air""], 300];" \n

           "		" \n

           "		if ({isPlayer _x}count _list == 0) then {" \n

           "			_toBeDesimulated pushBack _x;" \n

           "			_x enableSimulationGlobal false;" \n

           "		};" \n

           "	};" \n

           "}count _activeVehicles;" \n

           "_activeVehicles = _activeVehicles - _toBeDesimulated;"/*%FSM</ACTION""">*/;

        };

        /*%FSM</LINK>*/

        /*%FSM<LINK "Simulate_Vehicle">*/

        class Simulate_Vehicle

        {

          priority = 1.000000;

          to="Process";

          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;

          condition=/*%FSM<CONDITION""">*/"((diag_tickTime - _delayTimeSim) > 5)"/*%FSM</CONDITION""">*/;

          action=/*%FSM<ACTION""">*/"_delayTimeSim = diag_tickTime;" \n

           "" \n

           "_players = [];" \n

           "{	" \n

           "	{" \n

           "		if !(simulationEnabled _x) then{" \n

           "			_x enableSimulationGlobal true;" \n

           "			_activeVehicles pushBack _x;" \n

           "		};" \n

           "	" \n

           "	}count (_x nearEntities[[""LandVehicle"", ""Ship"", ""Air""], 300]);" \n

           "	_players pushBack (getPlayerUID _x);" \n

           "}count playableUnits;"/*%FSM</ACTION""">*/;

        };

        /*%FSM</LINK>*/

      };

    };

    /*%FSM</STATE>*/

  };

  initState="Init";

  finalStates[] =

  {

  };

};

/*%FSM</COMPILE>*/
